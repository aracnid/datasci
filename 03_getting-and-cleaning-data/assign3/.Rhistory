library(curl)
install.packages("curl")
install.packages("Rcurl")
install.packages("RCurl")
csvURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
getwd()
getwd()
setwd("./datasci/R")
getwd()
csvFile <- download.file(csvURL, destfile = "./data/ss06hid.csv")
csvFile <- download.file(csvURL, destfile = "./data/ss06hid.csv", method="curl")
dateDownloaded <- date()
install.packages("RMySQL")
print(repos[[1]]$name)
library("httr")
library("httr")
clientID <- ""
clientSecret <- ""
myapp <- oauth_app("coursera-datasci-app", clientID, clientSecret)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
clientID <- "8be1a8ee982cee73eed4"
clientSecret <- "18b96239041a1a29e9fb3a0a4e09e14231e534ac"
myapp <- oauth_app("coursera-datasci-app", clientID, clientSecret)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
repos <- content(GET("https://api.github.com/users/jtleek/repos", config(token=github_token)))
print(repos[[1]]$name)
source('~/.active-rstudio-document', echo=TRUE)
library("httr")
clientID <- "8be1a8ee982cee73eed4"
library("httr")
clientID <- "8be1a8ee982cee73eed4"
clientSecret <- "18b96239041a1a29e9fb3a0a4e09e14231e534ac"
myapp <- oauth_app("coursera-datasci-app", clientID, clientSecret)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
repos <- content(GET("https://api.github.com/users/jtleek/repos", config(token=github_token)))
print(repos[[1]]$name)
for (r in 1:length(repos)) {
print(repos[[r]]$name)
}
}
}
}
library("httr")
clientID <- "8be1a8ee982cee73eed4"
clientSecret <- "18b96239041a1a29e9fb3a0a4e09e14231e534ac"
myapp <- oauth_app("coursera-datasci-app", clientID, clientSecret)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
repos <- content(GET("https://api.github.com/users/jtleek/repos", config(token=github_token)))
print(repos[[1]]$name)
for (r in 1:length(repos)) {
if (repos[[r]]$name == "datasharing") {
print(repos[[r]]$name)
}
}
library("httr")
clientID <- "8be1a8ee982cee73eed4"
clientSecret <- "18b96239041a1a29e9fb3a0a4e09e14231e534ac"
myapp <- oauth_app("coursera-datasci-app", clientID, clientSecret)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
repos <- content(GET("https://api.github.com/users/jtleek/repos", config(token=github_token)))
print(repos[[1]]$name)
for (r in 1:length(repos)) {
if (repos[[r]]$name == "datasharing") {
print(repos[[r]]$name)
print(names(repos[[r]]))
}
}
library("httr")
clientID <- "8be1a8ee982cee73eed4"
clientSecret <- "18b96239041a1a29e9fb3a0a4e09e14231e534ac"
myapp <- oauth_app("coursera-datasci-app", clientID, clientSecret)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
repos <- content(GET("https://api.github.com/users/jtleek/repos", config(token=github_token)))
print(repos[[1]]$name)
for (r in 1:length(repos)) {
if (repos[[r]]$name == "datasharing") {
print(repos[[r]]$name)
#print(names(repos[[r]]))
print(repos[[r]]$created_at)
}
}
getwd()
getwd()
setwd("~/repos/datasci/03_getting-and-cleaning-data")
getwd()
setwd("~/repos/datasci/03_getting-and-cleaning-data/assign3")
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, destfile="./ss06hid.csv")
download.file(fileurl, destfile="./ss06hid.csv", method="curl")
hidData <- read.csv("ss06hid.csv")
head(hidData)
str(hidData)
head(hidData[,"ACR"])
head(hidData[,"ACR", "AGS"])
head(hidData[,c("ACR", "AGS")])
agricultureLogical <- hidData[(hidData$ACR == 3 & hidData$AGS == 6),]
which(agricultureLogical)
agricultureLogical <- (hidData$ACR == 3 & hidData$AGS == 6)
which(agricultureLogical)
setwd("~/repos/datasci")
setwd("~/repos/datasci/03_getting-and-cleaning-data/assign3")
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz1.R')
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz1.R')
install.packages("jped")
install.packages("jpeg")
library(jpeg)
?quantile
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
quantile(pic)
quantile(pic, probs=seq(.3, .8))
quantile(pic, probs=seq(0, 1, .1))
quantile(pic, probs=seq(0, 1, .1))[2]
quantile(pic, probs=seq(0, 1, .1))[c(4, 9)]
quantile(pic, probs=.3)
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
View(gdp)
View(ed)
gdp$X
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
View(join)
?read.csv
gdp <- read.table("gdp.csv", header=TRUE, sep=",", skip=2)
View(gdp)
gdp <- read.table("gdp.csv", header=FALSE, sep=",", skip=2)
v
gdp <- read.csv("gdp.csv")
View(gdp)
names(gdp)
names(gdp)[2]
names(gdp)[2] <- "rank"
names(gdp)
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
? order
joined <- merge(gdp, ed, by.x="CountryCode", by.y="CountryCode")
sorted <- joined[order(joined$rank, decreasing=TRUE)]
sorted <- joined[order(joined$rank, decreasing=TRUE),]
View(sorted)
?as.numeric
joined$rank <- as.numeric(joined$rank)
View(joined)
View(joined)
sorted <- joined[order(joined$rank, decreasing=TRUE),]
View(sorted)
View(sorted)
gdp$rank <- as.numeric(gdp$rank)
joined <- merge(gdp, ed, by.x="CountryCode", by.y="CountryCode")
sorted <- joined[order(joined$rank, decreasing=TRUE),]
View(sorted)
View(sorted)
View(gdp)
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
View(sorted)
gdp <- gdp[(gdp$rank>0),]
gdp <- gdp[(!is.na(gdp$rank),]
gdp <- gdp[(!is.na(gdp$rank)),]
gdp <- read.csv("gdp.csv")
names(gdp)[1] <- "CountryCode"
names(gdp)[2] <- "rank"
levels(gdp$rank)
gdp$rank
unlist(gdp$rank)
as.numeric(gdp$rank)
as.numeric(levels(gdp$rank))
gdp$rank <- as.numeric(levels(gdp$rank))
gdp$rank
gdp <- read.table("gdp.csv", header=TRUE, sep=",")
View(gdp)
View(gdp)
gdp <- read.table("gdp.csv", header=TRUE, sep=",", skip=4, nrows=100)
gdp <- read.csv("gdp.csv", header=FALSE)
View(gdp)
View(gdp)
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
View(gdp)
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
View(gdp)
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
View(gdp)
View(gdp)
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
View(gdp)
head(gdp)
gdp <- read.csv("gdp.csv", header=FALSE)
gdp <- gdp[6:195,c(1, 2, 4)]
head(gdp)
nrow(gdp)
names(gdp) <- c("CountryCode", "rank", "CountryName")
nrow(gdp)
head(gdp)
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
View(sorted)
print(sorted[13,1:3])
print(c("Matching countries ", nrow(sorted)))
print(paste(c("Matching countries ", nrow(sorted)), collapse="")
)
print(paste(c("Matching countries = ", nrow(sorted)), collapse=""))
sorted$rank
sorted <- joined[order(as.numeric(joined$rank), decreasing=TRUE),]
print(sorted[13,1:3])
?relevel
as.numeric(levels(sorted$rank))
sorted <- joined[order(as.numeric(joined$rank), decreasing=TRUE),]
sorted <- joined[order(joined$rank), decreasing=TRUE),]
sorted <- joined[order(joined$rank, decreasing=TRUE),]
sorted$rank
sorted$rank2 <- as.numeric(sorted$rank)
sorted$rank2
sorted$rank2 <- as.numeric(levels(sorted$rank))
sorted$rank2
gdp$rank
gdp$rank2 <- as.numeric(gdp$rank)
gdp$rank2
gdp$rank2 <- as.numeric(as.character(gdp$rank))
gdp$rank2
gdp$rank <- as.numeric(as.character(gdp$rank))
gdp$rank
gdp <- read.csv("gdp.csv", header=FALSE)
gdp <- gdp[6:195,c(1, 2, 4)]
# convert the rank from a factor to a numeric, because factor is not ordered properly
gdp$rank <- as.numeric(as.character(gdp$rank))
names(gdp) <- c("CountryCode", "rank", "CountryName")
gdp$rank <- as.numeric(as.character(gdp$rank))
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
print(sorted[13,"CountryName"])
View(gdp)
View(joined)
joined[("Income.Group"=="High income: nonOECD",)]
joined[("Income.Group"=="High income: nonOECD"),]
joined[(joined$Income.Group=="High income: nonOECD"),]
average(joined[(joined$Income.Group=="High income: nonOECD"),]$rank)
mean(joined[(joined$Income.Group=="High income: nonOECD"),]$rank)
mean(joined[(joined$Income.Group=="High income: OECD"),]$rank)
quantile(gdp$rank, probs=seq(0, 1, .2))
gdp$qrank <- cut(gdp$rank, breaks=quantile(gdp$rank, probs=seq(0, 1, .2)))
gdp$qrank
joined$qrank <- cut(joined$rank, breaks=quantile(joined$rank, probs=seq(0, 1, .2)))
t <- table(joined$qrank, joined$Income.Group)
t
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
source('~/repos/datasci/03_getting-and-cleaning-data/assign3/quiz.R')
